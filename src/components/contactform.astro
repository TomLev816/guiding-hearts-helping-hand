---
import Button from "./ui/button.astro";
---

<!-- To make this contact form work, create your free access key from https://web3forms.com/
     Then you will get all form submissions in your email inbox. -->
<form
  action="https://api.web3forms.com/submit"
  method="POST"
  id="contact-form"
  class="font-sans space-y-6"
  novalidate
>
  <!-- Web3Forms Access Key -->
  <input type="hidden" name="access_key" value="c6914e59-e378-4423-bd10-d04f6771def5" />
  <input type="hidden" name="subject" value="New Contact Form Submission from your Website" />
  <input type="checkbox" name="botcheck" class="hidden" style="display:none;" />

  <!-- Name Fields -->
  <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
    <div>
      <label for="first_name" class="sr-only">First Name</label>
      <input
        type="text"
        id="first_name"
        name="first_name"
        placeholder="First Name"
        required
        class="w-full px-4 py-3 bg-white border border-gray-300 rounded-lg outline-none focus:ring-2 focus:ring-[#2c5d5c] focus:border-[#2c5d5c] transition-all"
      />
      <div class="empty-feedback invalid-feedback text-red-500 text-sm mt-1">
        Please provide your first name.
      </div>
    </div>
    <div>
      <label for="last_name" class="sr-only">Last Name</label>
      <input
        type="text"
        id="last_name"
        name="last_name"
        placeholder="Last Name"
        required
        class="w-full px-4 py-3 bg-white border border-gray-300 rounded-lg outline-none focus:ring-2 focus:ring-[#2c5d5c] focus:border-[#2c5d5c] transition-all"
      />
       <div class="empty-feedback invalid-feedback text-red-500 text-sm mt-1">
          Please provide your last name.
      </div>
    </div>
  </div>

  <!-- Email and Phone -->
  <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
    <div>
      <label for="email_address" class="sr-only">Email Address</label>
      <input
        id="email_address"
        type="email"
        placeholder="Email Address"
        name="email"
        required
        class="w-full px-4 py-3 bg-white border border-gray-300 rounded-lg outline-none focus:ring-2 focus:ring-[#2c5d5c] focus:border-[#2c5d5c] transition-all"
      />
      <div class="empty-feedback text-red-500 text-sm mt-1">
        Please provide your email address.
      </div>
      <div class="invalid-feedback text-red-500 text-sm mt-1">
        Please provide a valid email address.
      </div>
    </div>
    <div>
      <label for="phone" class="sr-only">Phone</label>
      <input
        type="tel"
        id="phone"
        name="phone"
        placeholder="Phone (optional)"
        class="w-full px-4 py-3 bg-white border border-gray-300 rounded-lg outline-none focus:ring-2 focus:ring-[#2c5d5c] focus:border-[#2c5d5c] transition-all"
      />
    </div>
  </div>

  <!-- Checkbox Group -->
  <fieldset id="services-fieldset">
    <legend class="block text-base font-medium text-[#393836] mb-3">I'm interested in... (required)</legend>
    <div class="space-y-3">
      <div class="flex items-center">
        <input id="counseling" name="interest" type="checkbox" value="Counseling Services" class="h-4 w-4 text-[#2c5d5c] border-gray-300 rounded focus:ring-[#2c5d5c]">
        <label for="counseling" class="ml-3 block text-sm text-[#575654]">Counseling Services</label>
      </div>
      <div class="flex items-center">
        <input id="concierge" name="interest" type="checkbox" value="Concierge Services" class="h-4 w-4 text-[#2c5d5c] border-gray-300 rounded focus:ring-[#2c5d5c]">
        <label for="concierge" class="ml-3 block text-sm text-[#575654]">Concierge Services</label>
      </div>
      <div class="flex items-center">
        <input id="consulting" name="interest" type="checkbox" value="Consulting/Training Services" class="h-4 w-4 text-[#2c5d5c] border-gray-300 rounded focus:ring-[#2c5d5c]">
        <label for="consulting" class="ml-3 block text-sm text-[#575654]">Consulting/Training Services</label>
      </div>
      <div class="flex items-center">
        <input id="concierge" name="interest" type="checkbox" value="Medicaid Assistance" class="h-4 w-4 text-[#2c5d5c] border-gray-300 rounded focus:ring-[#2c5d5c]">
        <label for="concierge" class="ml-3 block text-sm text-[#575654]">Medicaid Assistance</label>
      </div>
    </div>
    <div id="checkbox-feedback" class="invalid-feedback text-red-500 text-sm mt-2">
      Please select at least one area of interest.
    </div>
  </fieldset>

  <!-- Message Text area -->
  <div>
    <label for="message" class="sr-only">Additional Message</label>
    <textarea
      id="message"
      name="message"
      placeholder="Additional Message (optional)"
      rows="4"
      class="w-full px-4 py-3 bg-white border border-gray-300 rounded-lg outline-none focus:ring-2 focus:ring-[#2c5d5c] focus:border-[#2c5d5c] transition-all"
    ></textarea>
  </div>

  <!-- Submit Button -->
  <div>
    <button type="submit" class="btn-primary">
      Send Message
    </button>
  </div>
  
  <div id="form-result" class="mt-4 text-center text-lg"></div>
</form>

<style>
  /* Basic styles for validation feedback */
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }
  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }
  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }
  .was-validated .is-invalid ~ .invalid-feedback {
      display: block;
  }
  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545; /* Red for errors */
  }
</style>

<script is:inline>
  const form = document.getElementById("contact-form");
  const result = document.getElementById("form-result");
  const fieldset = document.getElementById("services-fieldset");
  const checkboxes = fieldset.querySelectorAll('input[type="checkbox"]');

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");

    // Custom checkbox validation
    let isCheckboxChecked = false;
    checkboxes.forEach(checkbox => {
      if (checkbox.checked) {
        isCheckboxChecked = true;
      }
    });

    if (!isCheckboxChecked) {
      fieldset.classList.add("is-invalid");
    } else {
      fieldset.classList.remove("is-invalid");
    }

    if (!form.checkValidity() || !isCheckboxChecked) {
      form.querySelector(":invalid, .is-invalid")?.focus();
      return;
    }

    const formData = new FormData(form);
    const object = Object.fromEntries(formData.entries());
    // Combine checkbox values
    object.interest = formData.getAll('interest').join(', ');
    const json = JSON.stringify(object);
    result.innerHTML = "Sending...";
    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          result.classList.add("text-green-600");
          result.innerHTML = json.message;
        } else {
          console.log(response);
          result.classList.add("text-red-500");
          result.innerHTML = json.message;
        }
      })
      .catch((error) => {
        console.log(error);
        result.classList.add("text-red-500");
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        fieldset.classList.remove("is-invalid");
        setTimeout(() => {
          result.innerHTML = "";
          result.classList.remove("text-green-600", "text-red-500");
        }, 5000);
      });
  });
</script>